name: "Build and Deploy"

on:
  push:
    branches:
      - main
      - staging
      
# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
    # The concurrency group contains the workflow name and the branch name for pull requests
    # or the commit hash for any other events.
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
    cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.PRIVATE_ACCESS_TOKEN }}

    - name: Set composer token
      run: composer config github-oauth.github.com ${{ secrets.PRIVATE_ACCESS_TOKEN }}

    - name: Composer Install
      uses: ramsey/composer-install@v2
      with:
        composer-options: "--no-dev"

    - name: Composer Install
      uses: ramsey/composer-install@v2
      with:
        composer-options: "--no-dev --optimize-autoloader"
        working-directory: "web/app/mu-plugins/bsf-saas-billing"

    - name: Dump autoload
      run: cd web/app/mu-plugins/bsf-saas-billing && composer install --ignore-platform-reqs && composer dump-autoload -o && cd --

    - name: Set environment name
      run: |
          if [ '${{github.ref}}' = 'refs/heads/staging' ]
          then
            echo "ENVIRONMENT=STAGING" >> $GITHUB_ENV
            echo "WP_ENV=staging" >> $GITHUB_ENV
          fi
          if [ '${{github.ref}}' = 'refs/heads/main' ]
          then
            echo "ENVIRONMENT=MAIN" >> $GITHUB_ENV
            echo "WP_ENV=production" >> $GITHUB_ENV
          fi

    - uses: iamsauravsharma/create-dotenv@v1.2.1
      with:
          env-prefix: 'ENV_KEY_'
      env:
        ENV_KEY_DB_NAME: ${{ secrets[format('DB_NAME_{0}', env.ENVIRONMENT)] }}
        ENV_KEY_DB_USER: ${{ secrets[format('DB_USER_{0}', env.ENVIRONMENT)] }}
        ENV_KEY_DB_PASSWORD: ${{ secrets[format('DB_PASSWORD_{0}', env.ENVIRONMENT)] }}
        ENV_KEY_DB_PREFIX: wp_
        ENV_KEY_DB_HOST: ${{ secrets[format('DB_HOST_{0}', env.ENVIRONMENT)] }}

        ENV_KEY_ENABLE_GPT3: true

        ENV_KEY_WP_ENV: ${{ env.WP_ENV }}
        ENV_KEY_WP_ENVIRONMENT_TYPE: ${{ env.WP_ENV }}
        ENV_KEY_WP_HOME: ${{ secrets[format('WP_HOME_{0}', env.ENVIRONMENT)] }}
        ENV_KEY_API_SERVER_URL: ${{ secrets[format('API_SERVER_URL_{0}', env.ENVIRONMENT)] }}
        ENV_KEY_API_WEBHOOK_URL: ${{ secrets[format('API_WEBHOOK_URL_{0}', env.ENVIRONMENT)] }}
        ENV_KEY_API_AUTH_KEY: ${{ secrets[format('API_AUTH_KEY_{0}', env.ENVIRONMENT)] }}
        ENV_KEY_WP_SITEURL: "${WP_HOME}/wp"

        ENV_KEY_AWS_SES_WP_MAIL_REGION: ${{ secrets.AWS_SES_WP_MAIL_REGION }}
        ENV_KEY_AWS_SES_WP_MAIL_KEY: ${{ secrets.AWS_SES_WP_MAIL_KEY }}
        ENV_KEY_AWS_SES_WP_MAIL_SECRET: ${{ secrets.AWS_SES_WP_MAIL_SECRET }}

        ENV_KEY_AUTH_KEY: 'H/<>EPCR^t3AV<::}/t>[c4fp0-5rl{cg%6,dT[/f'
        ENV_KEY_SECURE_AUTH_KEY: 'L?z\`_TdXwpAszq'
        ENV_KEY_LOGGED_IN_KEY: 'JPomRex@Ewq\`+G^f'
        ENV_KEY_NONCE_KEY: ':0[2]AP7w<f)\!T8-XpE=?&?jqj&\!tKdVQeX;u|fr0mnb1,pmTrWsz1Ds)/34XBpQ'
        ENV_KEY_AUTH_SALT: 'x2ixAR.)9nn9_f9nt%Zb-6pE.}3)MNY_PVy/>ck0qzMuzh8c0C(`Tc!a6c_e[:oz'
        ENV_KEY_SECURE_AUTH_SALT: 'AWcRR/S(SmePf6%IgZ,&u0T7\`RX315H@0nN/c(pJ@?Q\!gBFI@+OZgSGp*h.0PyYy'
        ENV_KEY_LOGGED_IN_SALT: '\!*d;QxRdhfT654-\!7\!9fkRC)1Vcd5EalP0n5,p;3p?FCo}qiPv@+a;(wM97g='
        ENV_KEY_NONCE_SALT: 'QTzX-eQ.xbe[szK=Qe2vYnkp.FV]Q[-4\$yfD_r975}Dj9@,x1embm[j%d2Xdp9}l'

    - name: Rsync Deployment
      uses: burnett01/rsync-deployments@5.2
      with:
        switches: -avzr --delete --exclude="web/app/uploads/*" --exclude="node_modules" --exclude=".git" --exclude="composer.json" --exclude="composer.lock" --exclude="*.md" --exclude=".gitignore"  --exclude="package.json"  --exclude="package-lock.json" --exclude=".github" --exclude=".gitmodules" --exclude="phpcs.xml"
        remote_path: ${{ secrets[format('SSH_PATH_{0}', env.ENVIRONMENT)] }}
        remote_host: ${{ secrets[format('SSH_HOST_{0}', env.ENVIRONMENT)] }}
        remote_user: ${{ secrets[format('SSH_USERNAME_{0}', env.ENVIRONMENT)] }}
        remote_key: ${{ secrets[format('SSH_KEY_{0}', env.ENVIRONMENT)] }}
